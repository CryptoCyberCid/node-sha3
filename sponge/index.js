"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _buffer=require("buffer");var _keccak=_interopRequireDefault(require("./keccak"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var allowedCapacityValues=[224,256,384,512];var commit=function commit(input,output){for(var i=0;i<input.length;i++){output[i]^=input[i]}(0,_keccak.default)(output)};var Sponge=function Sponge(_ref){var _this=this;var capacity=_ref.capacity,padding=_ref.padding;if(!allowedCapacityValues.includes(capacity)){throw new Error("Unsupported hash length")}var stateSize=200;var hashSize=capacity/8;var queueSize=stateSize-hashSize*2;var queueOffset=0;var state=_buffer.Buffer.alloc(stateSize);state.fill(0);var queue=_buffer.Buffer.alloc(queueSize);this.absorb=function(buffer){for(var i=0;i<buffer.length;i++){queue[queueOffset]=buffer[i];queueOffset+=1;if(queueOffset>=queueSize){commit(queue,state);queueOffset=0}}return _this};this.squeeze=function(){var output={queue:_buffer.Buffer.alloc(queueSize),state:_buffer.Buffer.alloc(stateSize)};queue.copy(output.queue);state.copy(output.state);output.queue.fill(0,queueOffset);output.queue[queueOffset]|=padding;output.queue[queueSize-1]|=128;commit(output.queue,output.state);return output.state.slice(0,hashSize)};this.reset=function(){queue.fill(0);state.fill(0);queueOffset=0;return _this};return this};var _default=Sponge;exports.default=_default;